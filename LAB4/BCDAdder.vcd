$date
	Tue Oct 10 10:42:52 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module BCDAdder_tb $end
$var wire 5 ! sum [4:0] $end
$var reg 4 " a [3:0] $end
$var reg 4 # b [3:0] $end
$scope module UUT $end
$var wire 4 $ a [3:0] $end
$var wire 4 % b [3:0] $end
$var wire 5 & sum [4:0] $end
$var wire 4 ' rca_sum [3:0] $end
$var wire 1 ( rca_carry $end
$scope module RCA $end
$var wire 4 ) a [3:0] $end
$var wire 4 * b [3:0] $end
$var wire 4 + sum [3:0] $end
$var wire 1 ( carry $end
$var wire 1 , c3 $end
$var wire 1 - c2 $end
$var wire 1 . c1 $end
$scope module FA0 $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 1 c $end
$var wire 1 . carry $end
$var wire 1 2 sum $end
$upscope $end
$scope module FA1 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 . c $end
$var wire 1 - carry $end
$var wire 1 5 sum $end
$upscope $end
$scope module FA2 $end
$var wire 1 6 a $end
$var wire 1 7 b $end
$var wire 1 - c $end
$var wire 1 , carry $end
$var wire 1 8 sum $end
$upscope $end
$scope module FA3 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 , c $end
$var wire 1 ( carry $end
$var wire 1 ; sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0;
0:
09
08
07
06
15
14
03
12
01
00
1/
0.
0-
0,
b11 +
b10 *
b1 )
0(
b11 '
b11 &
b10 %
b1 $
b10 #
b1 "
b11 !
$end
#10
b10101 !
b10101 &
18
b1111 '
b1111 +
1;
10
0/
16
19
b11 #
b11 %
b11 *
b1100 "
b1100 $
b1100 )
#20
1(
0;
b11 !
b11 &
1,
b11 '
b11 +
08
00
04
17
1/
13
b100 #
b100 %
b100 *
b1111 "
b1111 $
b1111 )
#30
18
1-
b10010 !
b10010 &
05
02
b1100 '
b1100 +
1;
0(
14
0/
09
b110 #
b110 %
b110 *
b110 "
b110 $
b110 )
#40
